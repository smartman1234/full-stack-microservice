admin: 
  port: 9990

namers:
  # Consul service discovery
  - kind: io.l5d.consul
    # prefix: io.l5d.consul
    host: docker.for.mac.localhost # default: localhost, use consul if on container
    port: 8500
    includeTag: false # whether to read Consul tag from the path
    useHealthCheck: true
    # token: 
    # Should be false first
    setHost: false # ${serviceName}.service.${datacenter}.consul
    consistencyMode: stale
    failFast: true
    preferServiceAddress: true
  
  - kind: io.l5d.consul
    prefix: /io.l5d.linker_to_consul
    host: docker.for.mac.localhost
    port: 8500
    includeTag: false
    useHealthCheck: true
    setHost: true
    consistencyMode: stale
    failFast: true
    preferServiceAddress: true

routers:
# http 1.1: service -> [linkerd] -> linkerd -> service
# should lookup consul service then rewrite outgoing port to linkerd
- label: /http-consul-out
  protocol: http
  service:
    responseClassifier:
      kind: io.l5d.http.retryableIdempotent5XX
    retries:
      budget:
        percentCanRetry: 0.1 # For every 10 non-retry calls, allow 1 retry
  identifier:
    kind: io.l5d.header.token
    # Defaults to `Host: audit`
    # header: l5d-name #  curl -H "l5d-name: audit" localhost:4140/
    # Using path localhost:4140/helloworld
    # kind: io.l5d.path
    # segments: 1
    # consume: true
  dtab: |
    /svc => /#/io.l5d.consul/.local;
  servers:
  - port: 4140
    ip: 0.0.0.0
  interpreter:
    kind: default
    transformers:
      - kind: io.l5d.port
        port: 4141

  client:
   requeueBudget:
    percentCanRetry: 5.0
   loadBalancer:
    kind: ewma
    maxEffort: 10
    decayTimeMs: 15000

# OUT
# http 1.1: service -> linkerd -> [linkerd] -> service
# should lookup local service then filter down to local node
- label: /http-consul-in
  protocol: http
  servers:
    - port: 4141
      ip: 0.0.0.0
      # tls:
        # certPath: /etc/linkerd/server.crt
        # keyPath: /etc/linkerd/server.crt
  dtab: |
    /svc  => /#/io.l5d.linker_to_consul/.local;
    # /consulSvc  => /#/io.l5d.consul/.local;
    # /host       => /$/io.buoyant.http.subdomainOfPfx/service.consul/consulSvc;
    # /svc => /host;
    # /consulSvc  => /#/io.l5d.linker_to_consul/.local;
    # /host       => /$/io.buoyant.http.subdomainOfPfx/svc/consulSvc;
    # /svc => /host;

  identifier:
    kind: io.l5d.header.token
  interpreter:
    kind: default
    transformers:
      - kind: io.l5d.localhost

telemetry:
- kind: io.l5d.zipkin
  host: docker.for.mac.localhost
  port: 9410
  sampleRate: 1.0

# Don't send data to Buoyant
usage:
  orgId: linkerd-examples-consul
  enabled: false